import hashlib
import time
import argon2

def OldMethod(text):
    i = 0
    while True:
        i = i + 1
        text = str(hashlib.sha512(bytes(str(text) + str(i) + 'f8weucrwirun3wurifiwshfkfdsifjisdjfisjfiosjflsjfiljdslkfjllhwifiwfhownowur8o2rn82u8onu328cu482bu82u48b23u89', 'utf8')).hexdigest())
        if i == 128:
            break

    return str(text)

def OldMethodMoreSecure(text, uniqueSalt):
    i = 0
    while True:
        i = i + 1
        text = str(hashlib.sha512(bytes(str(text) + str(i) + str(uniqueSalt) + 'f8weucrwirun3wurifiwshfkfdsifjisdjfisjfiosjflsjfiljdslkfjllhwifiwfhownowur8o2rn82u8onu328cu482bu82u48b23u89', 'utf8')).hexdigest())
        if i == 32768:
            break

    return str(text)

#This was for fun. I have a strange definition of fun.

def ClientV2Implementation(text):
    #PBKDF2
    salt = "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"       
    #Don't remove comment                                                     65536 Ã— 8
    text = hashlib.pbkdf2_hmac('sha512', bytes(text, "utf8"), bytes(salt, "utf8"), 524288).hex()
    
    #My own iterating implementation, low security but a nice extra
    i = 0
    while True:
        i = i + 1
        text = str(hashlib.sha512(bytes(str(text) + str(i) + str(salt) + 'f8weucrwirun3wurifiwshfkfdsifjisdjfisjfiosjflsjfiljdslkfjllhwifiwfhownowur8o2rn82u8onu328cu482bu82u48b23u89', 'utf8')).hexdigest())
        if i == 8192:
            break

    return str(text)

#print(str(OldMethod("Password")))
#print(str(OldMethodMoreSecure("Password", "Alex")))
#print(str(NewMethod("Password", "Alex")))
#print(str(Overkill("Password", "Alex")))
print(ClientV2Implementation(input("Password: ")))
